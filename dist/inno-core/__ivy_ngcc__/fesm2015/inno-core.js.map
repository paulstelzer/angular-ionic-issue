{"version":3,"file":"inno-core.js","sources":["ng:/inno-core/lib/inno-core.module.ts","ng:/inno-core/lib/services/platform.service.ts","ng:/inno-core/public-api.ts","ng:/inno-core/inno-core.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAKa,cAAc,sBAA3B,MAAa,cAAc;IACzB,OAAO,OAAO;QACZ,OAAO;YACL,QAAQ,EAAE,gBAAc;YACxB,SAAS,EAAE;gBACT,MAAM;gBACN,UAAU;aACX;SACF,CAAC;KACH;;;EACF,CAVY,cAAc,uCAD1B,QAAQ,EAAE,IACE,cAAc,CAU1B,kDACD;;ICRa,eAAe,GAA5B,MAAa,eAAe;IAE1B,YACU,QAAkB,EAClB,MAAc,EACd,UAAsB;QAFtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;KAG/B;IAED,SAAS;QACP,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;KACpC;IAEK,aAAa;;YACjB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAC/B,OAAO,MAAM,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC;aACjD;YACD,OAAO,KAAK,CAAC;SACd;KAAA;IAEK,cAAc;;YAClB,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAC/B,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;aAC/B;YACD,OAAO,SAAS,CAAC;SAClB;KAAA;CACF;wMAAA;;YAxBqB,QAAQ;YACV,MAAM;YACF,UAAU;;wOAgBpB;AArBD,eAAe,oBAH3B,UAAU,CAAC,UACV,UAAU,EAAE;CAAM,MACnB,CAAC,IACW;IAAe,CA2B3B;;;;;;+HACD;;ACpCA;;GAEG;;ACFH;;GAEG","sourcesContent":["import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {Device} from '@ionic-native/device/ngx';\r\nimport {AppVersion} from '@ionic-native/app-version/ngx';\r\n\r\n@NgModule()\r\nexport class InnoCoreModule {\r\n  static forRoot(): ModuleWithProviders<InnoCoreModule> {\r\n    return {\r\n      ngModule: InnoCoreModule,\r\n      providers: [\r\n        Device,\r\n        AppVersion,\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Platform} from '@ionic/angular';\r\nimport {Device} from '@ionic-native/device/ngx';\r\nimport {AppVersion} from '@ionic-native/app-version/ngx';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlatformService {\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private device: Device,\r\n    private appVersion: AppVersion,\r\n  ) {\r\n\r\n  }\r\n\r\n  isAndroid() {\r\n    return this.platform.is('android');\r\n  }\r\n\r\n  async getAppVersion() {\r\n    if (this.platform.is('cordova')) {\r\n      return await this.appVersion.getVersionNumber();\r\n    }\r\n    return 'dev';\r\n  }\r\n\r\n  async getDeviceModel() {\r\n    if (this.platform.is('cordova')) {\r\n      return `${this.device.model}`;\r\n    }\r\n    return 'Browser';\r\n  }\r\n}\r\n","/*\n * Public API Surface of inno-core\n */\n\nexport * from './lib/inno-core.module';\nexport * from './lib/services/platform.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}